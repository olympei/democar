{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/environment/amazon-cognito-identity-management-workshop/website/src/pages/MainApp.js\";\n\n/*\n *   Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\nimport React from 'react';\nimport BaseMap from '../components/BaseMap';\nimport ESRIMap from '../components/ESRIMap';\nimport Amplify from 'aws-amplify';\nimport { Auth, API } from 'aws-amplify';\nimport awsConfig from '../amplify-config';\nimport '../css/ride.css';\nconst apiName = 'WildRydesAPI';\nconst apiPath = '/ride';\n\nclass MainApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      authToken: null,\n      idToken: null,\n      requestRideEnabled: false,\n      updates: ['Welcome! Click the map to set your pickup location.']\n    };\n  }\n\n  async componentDidMount() {\n    const session = await Auth.currentSession();\n    this.setState({\n      authToken: session.accessToken.jwtToken\n    });\n    this.setState({\n      idToken: session.idToken.jwtToken\n    });\n  }\n  /**\n   * Determines if the API is enabled\n   *\n   * @return {Boolean} true if API is configured\n   */\n\n\n  hasApi() {\n    const api = awsConfig.API.endpoints.filter(v => v.endpoint !== '');\n    return typeof api !== 'undefined';\n  }\n  /**\n   * Calls the backend API to retrieve the Unicorn data\n   *\n   * @param {Number} latitude\n   * @param {Number} longitude\n   */\n\n\n  async getData(pin) {\n    const apiRequest = {\n      body: {\n        PickupLocation: {\n          Longitude: pin.longitude,\n          Latitude: pin.latitude\n        }\n      },\n      headers: {\n        'Authorization': '',\n        // To be updated\n        'Content-Type': 'application/json'\n      }\n    };\n    console.log('API Request:', apiRequest);\n    return await API.post(apiName, apiPath, apiRequest);\n  }\n  /**\n   * Called when Request Ride is called\n   */\n\n\n  async onClick() {\n    if (!this.state.pin) {\n      console.error('No pin present - skipping');\n      return true;\n    }\n\n    const updates = ['Requesting Unicorn'];\n\n    try {\n      this.setState({\n        requestRideEnabled: false,\n        updates\n      });\n      const data = await this.getData(this.state.pin);\n      console.log(data);\n      updates.push([`Your unicorn, ${data.Unicorn.Name} will be with you in ${data.Eta}`]);\n      this.setState({\n        updates\n      }); // Let's fake the arrival\n\n      setTimeout(() => {\n        console.log('Ride Complete');\n        const updateList = this.state.updates;\n        updateList.push([`${data.Unicorn.Name} has arrived`]);\n        this.setState({\n          updates: updateList,\n          requestRideEnabled: false,\n          pin: null\n        });\n      }, data.Eta * 1000);\n    } catch (err) {\n      console.error(err);\n      updates.push(['Error finding unicorn']);\n      this.setState({\n        updates\n      });\n    }\n  }\n  /**\n   * Called when the mapClick happens\n   * @param {Point} position the position of the map pin\n   */\n\n\n  onMapClick(position) {\n    console.log(`onMapClick(${JSON.stringify(position)})`);\n    this.setState({\n      pin: position,\n      requestRideEnabled: true\n    });\n  }\n\n  render() {\n    const hasApi = this.hasApi(); // If API is not configured, but auth is, then output the\n    // token.\n\n    if (!hasApi) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(BaseMap, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"configMessage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"backdrop\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"panel panel-default\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"panel-heading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"panel-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }\n      }, \"Successfully Authenticated!\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"panel-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }\n      }, \"This page is not functional yet because there is no API configured.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }\n      }, \"Here is your user's identity token:\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"idToken\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }\n      }, this.state.idToken)))));\n    } // If the API is configured, then display the \"requestUnicorn\"\n    // button.  If data is available (i.e. unicorn is requested),\n    // then display the additional patterns (unicorn on map).\n\n\n    const updateList = this.state.updates.map((v, i) => /*#__PURE__*/React.createElement(\"li\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, v));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info panel panel-default\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"request\",\n      className: \"btn btn-primary\",\n      disabled: !this.state.requestRideEnabled,\n      onClick: () => this.onClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }, \"Request\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"ol\", {\n      id: \"updates\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, updateList))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ESRIMap, {\n      onMapClick: position => {\n        this.onMapClick(position);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default MainApp;","map":{"version":3,"sources":["/home/ec2-user/environment/amazon-cognito-identity-management-workshop/website/src/pages/MainApp.js"],"names":["React","BaseMap","ESRIMap","Amplify","Auth","API","awsConfig","apiName","apiPath","MainApp","Component","constructor","props","state","authToken","idToken","requestRideEnabled","updates","componentDidMount","session","currentSession","setState","accessToken","jwtToken","hasApi","api","endpoints","filter","v","endpoint","getData","pin","apiRequest","body","PickupLocation","Longitude","longitude","Latitude","latitude","headers","console","log","post","onClick","error","data","push","Unicorn","Name","Eta","setTimeout","updateList","err","onMapClick","position","JSON","stringify","render","map","i"],"mappings":"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","sourcesContent":["/*\n *   Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\nimport React from 'react';\nimport BaseMap from '../components/BaseMap';\nimport ESRIMap from '../components/ESRIMap';\nimport Amplify from 'aws-amplify';\nimport { Auth, API } from 'aws-amplify';\nimport awsConfig from '../amplify-config';\nimport '../css/ride.css';\n\nconst apiName = 'WildRydesAPI';\nconst apiPath = '/ride';\n\nclass MainApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      authToken: null,\n      idToken: null,\n      requestRideEnabled: false,\n      updates: [\n        'Welcome! Click the map to set your pickup location.'\n      ]\n    };\n  }\n\n  async componentDidMount() {\n    const session = await Auth.currentSession();\n    this.setState({ authToken: session.accessToken.jwtToken });\n    this.setState({ idToken: session.idToken.jwtToken });\n  }\n\n  /**\n   * Determines if the API is enabled\n   *\n   * @return {Boolean} true if API is configured\n   */\n  hasApi() {\n     const api = awsConfig.API.endpoints.filter(v => v.endpoint !== '');                                                   \n     return (typeof api !== 'undefined');\n  }\n\n  /**\n   * Calls the backend API to retrieve the Unicorn data\n   *\n   * @param {Number} latitude\n   * @param {Number} longitude\n   */\n async getData(pin) {\n    const apiRequest = {\n        body: {\n        PickupLocation: {\n            Longitude: pin.longitude,\n            Latitude: pin.latitude\n        }\n        },\n        headers: {\n        'Authorization': '', // To be updated\n        'Content-Type': 'application/json'\n        }\n    };\n    console.log('API Request:', apiRequest);\n    return await API.post(apiName, apiPath, apiRequest);\n}\n\n  /**\n   * Called when Request Ride is called\n   */\n  async onClick() {\n    if (!this.state.pin) {\n      console.error('No pin present - skipping');\n      return true;\n    }\n\n    const updates = [ 'Requesting Unicorn' ];\n    try {\n      this.setState({\n        requestRideEnabled: false,\n        updates\n      });\n      const data = await this.getData(this.state.pin);\n      console.log(data);\n      updates.push([ `Your unicorn, ${data.Unicorn.Name} will be with you in ${data.Eta}` ]);\n      this.setState({ updates });\n\n      // Let's fake the arrival\n      setTimeout(() => {\n        console.log('Ride Complete');\n        const updateList = this.state.updates;\n        updateList.push([ `${data.Unicorn.Name} has arrived` ]);\n        this.setState({\n          updates: updateList,\n          requestRideEnabled: false,\n          pin: null\n        });\n      }, data.Eta * 1000);\n    } catch (err) {\n      console.error(err);\n      updates.push([ 'Error finding unicorn' ]);\n      this.setState({ updates });\n    }\n  }\n\n  /**\n   * Called when the mapClick happens\n   * @param {Point} position the position of the map pin\n   */\n  onMapClick(position) {\n    console.log(`onMapClick(${JSON.stringify(position)})`);\n    this.setState({ pin: position, requestRideEnabled: true });\n  }\n\n  render() {\n    const hasApi = this.hasApi();\n\n    // If API is not configured, but auth is, then output the\n    // token.\n    if (!hasApi) {\n      return (\n        <div>\n          <BaseMap/>\n          <div className=\"configMessage\">\n            <div className=\"backdrop\"></div>\n            <div className=\"panel panel-default\">\n              <div className=\"panel-heading\">\n                <h3 className=\"panel-title\">Successfully Authenticated!</h3>\n              </div>\n              <div className=\"panel-body\">\n                <p>This page is not functional yet because there is no API configured.</p>\n                <p>Here is your user's identity token:</p>\n                <p className=\"idToken\">{this.state.idToken}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    // If the API is configured, then display the \"requestUnicorn\"\n    // button.  If data is available (i.e. unicorn is requested),\n    // then display the additional patterns (unicorn on map).\n    const updateList = this.state.updates.map(\n      (v, i) => <li key={i}>{v}</li>\n    );\n    return (\n      <div>\n        <div className=\"info panel panel-default\">\n          <div className=\"panel-heading\">\n            <button id=\"request\" className=\"btn btn-primary\" disabled={!this.state.requestRideEnabled} onClick={() => this.onClick()}>Request</button>\n          </div>\n          <div className=\"panel-body\">\n            <ol id=\"updates\">{updateList}</ol>\n          </div>\n        </div>\n        <div id=\"main\">\n          <ESRIMap onMapClick={(position) => { this.onMapClick(position); }}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MainApp;\n"]},"metadata":{},"sourceType":"module"}